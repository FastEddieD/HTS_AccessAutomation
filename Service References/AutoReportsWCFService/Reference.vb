'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace AutoReportsWCFService
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="CompositeType", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class CompositeType
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BoolValueField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StringValueField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BoolValue() As Boolean
            Get
                Return Me.BoolValueField
            End Get
            Set
                If (Me.BoolValueField.Equals(value) <> true) Then
                    Me.BoolValueField = value
                    Me.RaisePropertyChanged("BoolValue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StringValue() As String
            Get
                Return Me.StringValueField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StringValueField, value) <> true) Then
                    Me.StringValueField = value
                    Me.RaisePropertyChanged("StringValue")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="UserList", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class UserList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMAILField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FULLNAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private INTERNAL_USERField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ISACTIVEField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MANAGEMENT_USERField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private USERIDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMAIL() As String
            Get
                Return Me.EMAILField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EMAILField, value) <> true) Then
                    Me.EMAILField = value
                    Me.RaisePropertyChanged("EMAIL")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FULLNAME() As String
            Get
                Return Me.FULLNAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FULLNAMEField, value) <> true) Then
                    Me.FULLNAMEField = value
                    Me.RaisePropertyChanged("FULLNAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property INTERNAL_USER() As Boolean
            Get
                Return Me.INTERNAL_USERField
            End Get
            Set
                If (Me.INTERNAL_USERField.Equals(value) <> true) Then
                    Me.INTERNAL_USERField = value
                    Me.RaisePropertyChanged("INTERNAL_USER")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ISACTIVE() As Boolean
            Get
                Return Me.ISACTIVEField
            End Get
            Set
                If (Me.ISACTIVEField.Equals(value) <> true) Then
                    Me.ISACTIVEField = value
                    Me.RaisePropertyChanged("ISACTIVE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MANAGEMENT_USER() As Boolean
            Get
                Return Me.MANAGEMENT_USERField
            End Get
            Set
                If (Me.MANAGEMENT_USERField.Equals(value) <> true) Then
                    Me.MANAGEMENT_USERField = value
                    Me.RaisePropertyChanged("MANAGEMENT_USER")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property USERID() As Integer
            Get
                Return Me.USERIDField
            End Get
            Set
                If (Me.USERIDField.Equals(value) <> true) Then
                    Me.USERIDField = value
                    Me.RaisePropertyChanged("USERID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ArchiveList", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ArchiveList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ARCHIVEIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CONTAINERField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CREATEDField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DISTLISTField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMAILSENTField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FILENAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private JOBFORMATField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private JOBREFField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private JOBTYPEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MEMOField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PURGEAFTERField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SUBJECTField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ARCHIVEID() As Integer
            Get
                Return Me.ARCHIVEIDField
            End Get
            Set
                If (Me.ARCHIVEIDField.Equals(value) <> true) Then
                    Me.ARCHIVEIDField = value
                    Me.RaisePropertyChanged("ARCHIVEID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CONTAINER() As String
            Get
                Return Me.CONTAINERField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CONTAINERField, value) <> true) Then
                    Me.CONTAINERField = value
                    Me.RaisePropertyChanged("CONTAINER")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CREATED() As Date
            Get
                Return Me.CREATEDField
            End Get
            Set
                If (Me.CREATEDField.Equals(value) <> true) Then
                    Me.CREATEDField = value
                    Me.RaisePropertyChanged("CREATED")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DISTLIST() As String
            Get
                Return Me.DISTLISTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DISTLISTField, value) <> true) Then
                    Me.DISTLISTField = value
                    Me.RaisePropertyChanged("DISTLIST")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMAILSENT() As Boolean
            Get
                Return Me.EMAILSENTField
            End Get
            Set
                If (Me.EMAILSENTField.Equals(value) <> true) Then
                    Me.EMAILSENTField = value
                    Me.RaisePropertyChanged("EMAILSENT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FILENAME() As String
            Get
                Return Me.FILENAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FILENAMEField, value) <> true) Then
                    Me.FILENAMEField = value
                    Me.RaisePropertyChanged("FILENAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property JOBFORMAT() As String
            Get
                Return Me.JOBFORMATField
            End Get
            Set
                If (Object.ReferenceEquals(Me.JOBFORMATField, value) <> true) Then
                    Me.JOBFORMATField = value
                    Me.RaisePropertyChanged("JOBFORMAT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property JOBREF() As Integer
            Get
                Return Me.JOBREFField
            End Get
            Set
                If (Me.JOBREFField.Equals(value) <> true) Then
                    Me.JOBREFField = value
                    Me.RaisePropertyChanged("JOBREF")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property JOBTYPE() As String
            Get
                Return Me.JOBTYPEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.JOBTYPEField, value) <> true) Then
                    Me.JOBTYPEField = value
                    Me.RaisePropertyChanged("JOBTYPE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MEMO() As String
            Get
                Return Me.MEMOField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MEMOField, value) <> true) Then
                    Me.MEMOField = value
                    Me.RaisePropertyChanged("MEMO")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PURGEAFTER() As Date
            Get
                Return Me.PURGEAFTERField
            End Get
            Set
                If (Me.PURGEAFTERField.Equals(value) <> true) Then
                    Me.PURGEAFTERField = value
                    Me.RaisePropertyChanged("PURGEAFTER")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SUBJECT() As String
            Get
                Return Me.SUBJECTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SUBJECTField, value) <> true) Then
                    Me.SUBJECTField = value
                    Me.RaisePropertyChanged("SUBJECT")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="UserActivityList", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class UserActivityList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACTIONField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ARCHIVEIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ARCHIVEPATHField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CRITERIAField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DATETIMEField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DISTLISTField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ICONField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private JOBIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MEMOField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private REPORTNAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SHORT_DESCField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private USERIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private USERNAMEField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACTION() As String
            Get
                Return Me.ACTIONField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACTIONField, value) <> true) Then
                    Me.ACTIONField = value
                    Me.RaisePropertyChanged("ACTION")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ARCHIVEID() As Integer
            Get
                Return Me.ARCHIVEIDField
            End Get
            Set
                If (Me.ARCHIVEIDField.Equals(value) <> true) Then
                    Me.ARCHIVEIDField = value
                    Me.RaisePropertyChanged("ARCHIVEID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ARCHIVEPATH() As String
            Get
                Return Me.ARCHIVEPATHField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ARCHIVEPATHField, value) <> true) Then
                    Me.ARCHIVEPATHField = value
                    Me.RaisePropertyChanged("ARCHIVEPATH")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CRITERIA() As String
            Get
                Return Me.CRITERIAField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CRITERIAField, value) <> true) Then
                    Me.CRITERIAField = value
                    Me.RaisePropertyChanged("CRITERIA")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DATETIME() As Date
            Get
                Return Me.DATETIMEField
            End Get
            Set
                If (Me.DATETIMEField.Equals(value) <> true) Then
                    Me.DATETIMEField = value
                    Me.RaisePropertyChanged("DATETIME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DISTLIST() As String
            Get
                Return Me.DISTLISTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DISTLISTField, value) <> true) Then
                    Me.DISTLISTField = value
                    Me.RaisePropertyChanged("DISTLIST")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ICON() As String
            Get
                Return Me.ICONField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ICONField, value) <> true) Then
                    Me.ICONField = value
                    Me.RaisePropertyChanged("ICON")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property JOBID() As Integer
            Get
                Return Me.JOBIDField
            End Get
            Set
                If (Me.JOBIDField.Equals(value) <> true) Then
                    Me.JOBIDField = value
                    Me.RaisePropertyChanged("JOBID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MEMO() As String
            Get
                Return Me.MEMOField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MEMOField, value) <> true) Then
                    Me.MEMOField = value
                    Me.RaisePropertyChanged("MEMO")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property REPORTNAME() As String
            Get
                Return Me.REPORTNAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.REPORTNAMEField, value) <> true) Then
                    Me.REPORTNAMEField = value
                    Me.RaisePropertyChanged("REPORTNAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SHORT_DESC() As String
            Get
                Return Me.SHORT_DESCField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SHORT_DESCField, value) <> true) Then
                    Me.SHORT_DESCField = value
                    Me.RaisePropertyChanged("SHORT_DESC")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property USERID() As Integer
            Get
                Return Me.USERIDField
            End Get
            Set
                If (Me.USERIDField.Equals(value) <> true) Then
                    Me.USERIDField = value
                    Me.RaisePropertyChanged("USERID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property USERNAME() As String
            Get
                Return Me.USERNAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.USERNAMEField, value) <> true) Then
                    Me.USERNAMEField = value
                    Me.RaisePropertyChanged("USERNAME")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AppsList", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AppsList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private APPIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private APP_DIRECTORYField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private APP_FILENAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DESCRIPTIONField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MDW_DIRECTORYField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MDW_FILENAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PASSWORDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private STARTUP_DIRECTORYField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private STARTUP_FILENAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private STARTUP_OPTIONSField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TYPEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private USERNAMEField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property APPID() As Integer
            Get
                Return Me.APPIDField
            End Get
            Set
                If (Me.APPIDField.Equals(value) <> true) Then
                    Me.APPIDField = value
                    Me.RaisePropertyChanged("APPID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property APP_DIRECTORY() As String
            Get
                Return Me.APP_DIRECTORYField
            End Get
            Set
                If (Object.ReferenceEquals(Me.APP_DIRECTORYField, value) <> true) Then
                    Me.APP_DIRECTORYField = value
                    Me.RaisePropertyChanged("APP_DIRECTORY")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property APP_FILENAME() As String
            Get
                Return Me.APP_FILENAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.APP_FILENAMEField, value) <> true) Then
                    Me.APP_FILENAMEField = value
                    Me.RaisePropertyChanged("APP_FILENAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DESCRIPTION() As String
            Get
                Return Me.DESCRIPTIONField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DESCRIPTIONField, value) <> true) Then
                    Me.DESCRIPTIONField = value
                    Me.RaisePropertyChanged("DESCRIPTION")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MDW_DIRECTORY() As String
            Get
                Return Me.MDW_DIRECTORYField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MDW_DIRECTORYField, value) <> true) Then
                    Me.MDW_DIRECTORYField = value
                    Me.RaisePropertyChanged("MDW_DIRECTORY")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MDW_FILENAME() As String
            Get
                Return Me.MDW_FILENAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MDW_FILENAMEField, value) <> true) Then
                    Me.MDW_FILENAMEField = value
                    Me.RaisePropertyChanged("MDW_FILENAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PASSWORD() As String
            Get
                Return Me.PASSWORDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PASSWORDField, value) <> true) Then
                    Me.PASSWORDField = value
                    Me.RaisePropertyChanged("PASSWORD")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property STARTUP_DIRECTORY() As String
            Get
                Return Me.STARTUP_DIRECTORYField
            End Get
            Set
                If (Object.ReferenceEquals(Me.STARTUP_DIRECTORYField, value) <> true) Then
                    Me.STARTUP_DIRECTORYField = value
                    Me.RaisePropertyChanged("STARTUP_DIRECTORY")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property STARTUP_FILENAME() As String
            Get
                Return Me.STARTUP_FILENAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.STARTUP_FILENAMEField, value) <> true) Then
                    Me.STARTUP_FILENAMEField = value
                    Me.RaisePropertyChanged("STARTUP_FILENAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property STARTUP_OPTIONS() As String
            Get
                Return Me.STARTUP_OPTIONSField
            End Get
            Set
                If (Object.ReferenceEquals(Me.STARTUP_OPTIONSField, value) <> true) Then
                    Me.STARTUP_OPTIONSField = value
                    Me.RaisePropertyChanged("STARTUP_OPTIONS")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TYPE() As String
            Get
                Return Me.TYPEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TYPEField, value) <> true) Then
                    Me.TYPEField = value
                    Me.RaisePropertyChanged("TYPE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property USERNAME() As String
            Get
                Return Me.USERNAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.USERNAMEField, value) <> true) Then
                    Me.USERNAMEField = value
                    Me.RaisePropertyChanged("USERNAME")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="JobList", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class JobList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private APPIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CONTAINERField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CRITERIAField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DESCRIPTIONField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DISTLISTField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FREQField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ICONField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private INTERVALField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ISACTIVEField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private JOBIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LAST_ARCHIVEPATHField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LAST_RUNField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NEXT_SCHEDField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OUTPUT_FORMATField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private REPORTIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private REPORT_NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SELECTEDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TYPEField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property APPID() As Integer
            Get
                Return Me.APPIDField
            End Get
            Set
                If (Me.APPIDField.Equals(value) <> true) Then
                    Me.APPIDField = value
                    Me.RaisePropertyChanged("APPID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CONTAINER() As String
            Get
                Return Me.CONTAINERField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CONTAINERField, value) <> true) Then
                    Me.CONTAINERField = value
                    Me.RaisePropertyChanged("CONTAINER")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CRITERIA() As String
            Get
                Return Me.CRITERIAField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CRITERIAField, value) <> true) Then
                    Me.CRITERIAField = value
                    Me.RaisePropertyChanged("CRITERIA")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DESCRIPTION() As String
            Get
                Return Me.DESCRIPTIONField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DESCRIPTIONField, value) <> true) Then
                    Me.DESCRIPTIONField = value
                    Me.RaisePropertyChanged("DESCRIPTION")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DISTLIST() As String
            Get
                Return Me.DISTLISTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DISTLISTField, value) <> true) Then
                    Me.DISTLISTField = value
                    Me.RaisePropertyChanged("DISTLIST")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FREQ() As Integer
            Get
                Return Me.FREQField
            End Get
            Set
                If (Me.FREQField.Equals(value) <> true) Then
                    Me.FREQField = value
                    Me.RaisePropertyChanged("FREQ")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ICON() As String
            Get
                Return Me.ICONField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ICONField, value) <> true) Then
                    Me.ICONField = value
                    Me.RaisePropertyChanged("ICON")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property INTERVAL() As String
            Get
                Return Me.INTERVALField
            End Get
            Set
                If (Object.ReferenceEquals(Me.INTERVALField, value) <> true) Then
                    Me.INTERVALField = value
                    Me.RaisePropertyChanged("INTERVAL")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ISACTIVE() As Boolean
            Get
                Return Me.ISACTIVEField
            End Get
            Set
                If (Me.ISACTIVEField.Equals(value) <> true) Then
                    Me.ISACTIVEField = value
                    Me.RaisePropertyChanged("ISACTIVE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property JOBID() As Integer
            Get
                Return Me.JOBIDField
            End Get
            Set
                If (Me.JOBIDField.Equals(value) <> true) Then
                    Me.JOBIDField = value
                    Me.RaisePropertyChanged("JOBID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LAST_ARCHIVEPATH() As String
            Get
                Return Me.LAST_ARCHIVEPATHField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LAST_ARCHIVEPATHField, value) <> true) Then
                    Me.LAST_ARCHIVEPATHField = value
                    Me.RaisePropertyChanged("LAST_ARCHIVEPATH")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LAST_RUN() As Date
            Get
                Return Me.LAST_RUNField
            End Get
            Set
                If (Me.LAST_RUNField.Equals(value) <> true) Then
                    Me.LAST_RUNField = value
                    Me.RaisePropertyChanged("LAST_RUN")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NEXT_SCHED() As Date
            Get
                Return Me.NEXT_SCHEDField
            End Get
            Set
                If (Me.NEXT_SCHEDField.Equals(value) <> true) Then
                    Me.NEXT_SCHEDField = value
                    Me.RaisePropertyChanged("NEXT_SCHED")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OUTPUT_FORMAT() As String
            Get
                Return Me.OUTPUT_FORMATField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OUTPUT_FORMATField, value) <> true) Then
                    Me.OUTPUT_FORMATField = value
                    Me.RaisePropertyChanged("OUTPUT_FORMAT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property REPORTID() As Integer
            Get
                Return Me.REPORTIDField
            End Get
            Set
                If (Me.REPORTIDField.Equals(value) <> true) Then
                    Me.REPORTIDField = value
                    Me.RaisePropertyChanged("REPORTID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property REPORT_NAME() As String
            Get
                Return Me.REPORT_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.REPORT_NAMEField, value) <> true) Then
                    Me.REPORT_NAMEField = value
                    Me.RaisePropertyChanged("REPORT_NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SELECTED() As Integer
            Get
                Return Me.SELECTEDField
            End Get
            Set
                If (Me.SELECTEDField.Equals(value) <> true) Then
                    Me.SELECTEDField = value
                    Me.RaisePropertyChanged("SELECTED")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TYPE() As String
            Get
                Return Me.TYPEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TYPEField, value) <> true) Then
                    Me.TYPEField = value
                    Me.RaisePropertyChanged("TYPE")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MessageList", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MessageList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACCESS_USERIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BODYField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CCLISTField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CREATEDField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DEL_FLAGField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DISTLISTField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMAILEDField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LOT_SHIPPERField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MESSAGE_TYPEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private QAField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SENT_BYField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SENT_FLAGField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SUBJECTField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TRIGGERField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACCESS_USERID() As String
            Get
                Return Me.ACCESS_USERIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACCESS_USERIDField, value) <> true) Then
                    Me.ACCESS_USERIDField = value
                    Me.RaisePropertyChanged("ACCESS_USERID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BODY() As String
            Get
                Return Me.BODYField
            End Get
            Set
                If (Object.ReferenceEquals(Me.BODYField, value) <> true) Then
                    Me.BODYField = value
                    Me.RaisePropertyChanged("BODY")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CCLIST() As String
            Get
                Return Me.CCLISTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CCLISTField, value) <> true) Then
                    Me.CCLISTField = value
                    Me.RaisePropertyChanged("CCLIST")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CREATED() As Date
            Get
                Return Me.CREATEDField
            End Get
            Set
                If (Me.CREATEDField.Equals(value) <> true) Then
                    Me.CREATEDField = value
                    Me.RaisePropertyChanged("CREATED")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DEL_FLAG() As Boolean
            Get
                Return Me.DEL_FLAGField
            End Get
            Set
                If (Me.DEL_FLAGField.Equals(value) <> true) Then
                    Me.DEL_FLAGField = value
                    Me.RaisePropertyChanged("DEL_FLAG")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DISTLIST() As String
            Get
                Return Me.DISTLISTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DISTLISTField, value) <> true) Then
                    Me.DISTLISTField = value
                    Me.RaisePropertyChanged("DISTLIST")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMAILED() As Date
            Get
                Return Me.EMAILEDField
            End Get
            Set
                If (Me.EMAILEDField.Equals(value) <> true) Then
                    Me.EMAILEDField = value
                    Me.RaisePropertyChanged("EMAILED")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ID() As Integer
            Get
                Return Me.IDField
            End Get
            Set
                If (Me.IDField.Equals(value) <> true) Then
                    Me.IDField = value
                    Me.RaisePropertyChanged("ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LOT_SHIPPER() As String
            Get
                Return Me.LOT_SHIPPERField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LOT_SHIPPERField, value) <> true) Then
                    Me.LOT_SHIPPERField = value
                    Me.RaisePropertyChanged("LOT_SHIPPER")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MESSAGE_TYPE() As String
            Get
                Return Me.MESSAGE_TYPEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MESSAGE_TYPEField, value) <> true) Then
                    Me.MESSAGE_TYPEField = value
                    Me.RaisePropertyChanged("MESSAGE_TYPE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property QA() As Integer
            Get
                Return Me.QAField
            End Get
            Set
                If (Me.QAField.Equals(value) <> true) Then
                    Me.QAField = value
                    Me.RaisePropertyChanged("QA")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SENT_BY() As String
            Get
                Return Me.SENT_BYField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SENT_BYField, value) <> true) Then
                    Me.SENT_BYField = value
                    Me.RaisePropertyChanged("SENT_BY")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SENT_FLAG() As Boolean
            Get
                Return Me.SENT_FLAGField
            End Get
            Set
                If (Me.SENT_FLAGField.Equals(value) <> true) Then
                    Me.SENT_FLAGField = value
                    Me.RaisePropertyChanged("SENT_FLAG")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SUBJECT() As String
            Get
                Return Me.SUBJECTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SUBJECTField, value) <> true) Then
                    Me.SUBJECTField = value
                    Me.RaisePropertyChanged("SUBJECT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TRIGGER() As String
            Get
                Return Me.TRIGGERField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TRIGGERField, value) <> true) Then
                    Me.TRIGGERField = value
                    Me.RaisePropertyChanged("TRIGGER")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AlertList", [Namespace]:="http://schemas.datacontract.org/2004/07/"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AlertList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ELASPEDMINUTESField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LOCATIONField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MSGCOUNTField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NEWESTField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OLDESTField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private QUEUENAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RECIPIENTField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ELASPEDMINUTES() As Integer
            Get
                Return Me.ELASPEDMINUTESField
            End Get
            Set
                If (Me.ELASPEDMINUTESField.Equals(value) <> true) Then
                    Me.ELASPEDMINUTESField = value
                    Me.RaisePropertyChanged("ELASPEDMINUTES")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LOCATION() As String
            Get
                Return Me.LOCATIONField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LOCATIONField, value) <> true) Then
                    Me.LOCATIONField = value
                    Me.RaisePropertyChanged("LOCATION")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MSGCOUNT() As Integer
            Get
                Return Me.MSGCOUNTField
            End Get
            Set
                If (Me.MSGCOUNTField.Equals(value) <> true) Then
                    Me.MSGCOUNTField = value
                    Me.RaisePropertyChanged("MSGCOUNT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NEWEST() As Date
            Get
                Return Me.NEWESTField
            End Get
            Set
                If (Me.NEWESTField.Equals(value) <> true) Then
                    Me.NEWESTField = value
                    Me.RaisePropertyChanged("NEWEST")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OLDEST() As Date
            Get
                Return Me.OLDESTField
            End Get
            Set
                If (Me.OLDESTField.Equals(value) <> true) Then
                    Me.OLDESTField = value
                    Me.RaisePropertyChanged("OLDEST")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property QUEUENAME() As String
            Get
                Return Me.QUEUENAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.QUEUENAMEField, value) <> true) Then
                    Me.QUEUENAMEField = value
                    Me.RaisePropertyChanged("QUEUENAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RECIPIENT() As String
            Get
                Return Me.RECIPIENTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RECIPIENTField, value) <> true) Then
                    Me.RECIPIENTField = value
                    Me.RaisePropertyChanged("RECIPIENT")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="AutoReportsWCFService.IService")>  _
    Public Interface IService
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/WSAvailable", ReplyAction:="http://tempuri.org/IService/WSAvailableResponse")>  _
        Function WSAvailable() As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/WSAvailable", ReplyAction:="http://tempuri.org/IService/WSAvailableResponse")>  _
        Function WSAvailableAsync() As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DBAvailable", ReplyAction:="http://tempuri.org/IService/DBAvailableResponse")>  _
        Function DBAvailable() As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DBAvailable", ReplyAction:="http://tempuri.org/IService/DBAvailableResponse")>  _
        Function DBAvailableAsync() As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetData", ReplyAction:="http://tempuri.org/IService/GetDataResponse")>  _
        Function GetData(ByVal value As Integer) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetData", ReplyAction:="http://tempuri.org/IService/GetDataResponse")>  _
        Function GetDataAsync(ByVal value As Integer) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/HelloWorld", ReplyAction:="http://tempuri.org/IService/HelloWorldResponse")>  _
        Function HelloWorld(ByVal LocalTime As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/HelloWorld", ReplyAction:="http://tempuri.org/IService/HelloWorldResponse")>  _
        Function HelloWorldAsync(ByVal LocalTime As String) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDataUsingDataContract", ReplyAction:="http://tempuri.org/IService/GetDataUsingDataContractResponse")>  _
        Function GetDataUsingDataContract(ByVal composite As AutoReportsWCFService.CompositeType) As AutoReportsWCFService.CompositeType
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetDataUsingDataContract", ReplyAction:="http://tempuri.org/IService/GetDataUsingDataContractResponse")>  _
        Function GetDataUsingDataContractAsync(ByVal composite As AutoReportsWCFService.CompositeType) As System.Threading.Tasks.Task(Of AutoReportsWCFService.CompositeType)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUsers", ReplyAction:="http://tempuri.org/IService/GetUsersResponse")>  _
        Function GetUsers(ByVal IncludeInactive As Boolean) As AutoReportsWCFService.UserList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUsers", ReplyAction:="http://tempuri.org/IService/GetUsersResponse")>  _
        Function GetUsersAsync(ByVal IncludeInactive As Boolean) As System.Threading.Tasks.Task(Of AutoReportsWCFService.UserList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetJobHistory", ReplyAction:="http://tempuri.org/IService/GetJobHistoryResponse")>  _
        Function GetJobHistory(ByVal JobID As Integer, ByVal SinceDate As Date) As AutoReportsWCFService.ArchiveList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetJobHistory", ReplyAction:="http://tempuri.org/IService/GetJobHistoryResponse")>  _
        Function GetJobHistoryAsync(ByVal JobID As Integer, ByVal SinceDate As Date) As System.Threading.Tasks.Task(Of AutoReportsWCFService.ArchiveList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetArchiveInfo", ReplyAction:="http://tempuri.org/IService/GetArchiveInfoResponse")>  _
        Function GetArchiveInfo(ByVal ArchiveID As Integer) As AutoReportsWCFService.ArchiveList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetArchiveInfo", ReplyAction:="http://tempuri.org/IService/GetArchiveInfoResponse")>  _
        Function GetArchiveInfoAsync(ByVal ArchiveID As Integer) As System.Threading.Tasks.Task(Of AutoReportsWCFService.ArchiveList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserActivityLog", ReplyAction:="http://tempuri.org/IService/GetUserActivityLogResponse")>  _
        Function GetUserActivityLog(ByVal UserID As Integer, ByVal SinceDate As Date, ByVal IncludeASNs As Boolean, ByVal IncludeAutoReports As Boolean, ByVal IncludeAcctChanges As Boolean) As AutoReportsWCFService.UserActivityList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserActivityLog", ReplyAction:="http://tempuri.org/IService/GetUserActivityLogResponse")>  _
        Function GetUserActivityLogAsync(ByVal UserID As Integer, ByVal SinceDate As Date, ByVal IncludeASNs As Boolean, ByVal IncludeAutoReports As Boolean, ByVal IncludeAcctChanges As Boolean) As System.Threading.Tasks.Task(Of AutoReportsWCFService.UserActivityList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAppsList", ReplyAction:="http://tempuri.org/IService/GetAppsListResponse")>  _
        Function GetAppsList() As AutoReportsWCFService.AppsList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetAppsList", ReplyAction:="http://tempuri.org/IService/GetAppsListResponse")>  _
        Function GetAppsListAsync() As System.Threading.Tasks.Task(Of AutoReportsWCFService.AppsList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetOverdueJobsList", ReplyAction:="http://tempuri.org/IService/GetOverdueJobsListResponse")>  _
        Function GetOverdueJobsList(ByVal AppID As Integer, ByVal locaTime As String) As AutoReportsWCFService.JobList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetOverdueJobsList", ReplyAction:="http://tempuri.org/IService/GetOverdueJobsListResponse")>  _
        Function GetOverdueJobsListAsync(ByVal AppID As Integer, ByVal locaTime As String) As System.Threading.Tasks.Task(Of AutoReportsWCFService.JobList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetOverdueMessages", ReplyAction:="http://tempuri.org/IService/GetOverdueMessagesResponse")>  _
        Function GetOverdueMessages(ByVal MaxQty As Integer, ByVal SinceTime As String) As AutoReportsWCFService.MessageList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetOverdueMessages", ReplyAction:="http://tempuri.org/IService/GetOverdueMessagesResponse")>  _
        Function GetOverdueMessagesAsync(ByVal MaxQty As Integer, ByVal SinceTime As String) As System.Threading.Tasks.Task(Of AutoReportsWCFService.MessageList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetJobsToDistribute", ReplyAction:="http://tempuri.org/IService/GetJobsToDistributeResponse")>  _
        Function GetJobsToDistribute(ByVal MaxCount As Integer, ByVal SinceDate As String) As AutoReportsWCFService.ArchiveList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetJobsToDistribute", ReplyAction:="http://tempuri.org/IService/GetJobsToDistributeResponse")>  _
        Function GetJobsToDistributeAsync(ByVal MaxCount As Integer, ByVal SinceDate As String) As System.Threading.Tasks.Task(Of AutoReportsWCFService.ArchiveList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetQADistributionList", ReplyAction:="http://tempuri.org/IService/GetQADistributionListResponse")>  _
        Function GetQADistributionList(ByVal qaID As Integer) As AutoReportsWCFService.UserList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetQADistributionList", ReplyAction:="http://tempuri.org/IService/GetQADistributionListResponse")>  _
        Function GetQADistributionListAsync(ByVal qaID As Integer) As System.Threading.Tasks.Task(Of AutoReportsWCFService.UserList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetJobsList", ReplyAction:="http://tempuri.org/IService/GetJobsListResponse")>  _
        Function GetJobsList(ByVal OverdueOnly As Boolean, ByVal IncludeASNs As Boolean, ByVal IncludeAutoReports As Boolean, ByVal IncludeInactive As Boolean, ByVal SinceDate As Date) As AutoReportsWCFService.JobList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetJobsList", ReplyAction:="http://tempuri.org/IService/GetJobsListResponse")>  _
        Function GetJobsListAsync(ByVal OverdueOnly As Boolean, ByVal IncludeASNs As Boolean, ByVal IncludeAutoReports As Boolean, ByVal IncludeInactive As Boolean, ByVal SinceDate As Date) As System.Threading.Tasks.Task(Of AutoReportsWCFService.JobList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserJobSubscriptions", ReplyAction:="http://tempuri.org/IService/GetUserJobSubscriptionsResponse")>  _
        Function GetUserJobSubscriptions(ByVal UserID As Integer) As AutoReportsWCFService.JobList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserJobSubscriptions", ReplyAction:="http://tempuri.org/IService/GetUserJobSubscriptionsResponse")>  _
        Function GetUserJobSubscriptionsAsync(ByVal UserID As Integer) As System.Threading.Tasks.Task(Of AutoReportsWCFService.JobList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserAvailableJobs", ReplyAction:="http://tempuri.org/IService/GetUserAvailableJobsResponse")>  _
        Function GetUserAvailableJobs(ByVal UserID As Integer, ByVal IncludeSubscribed As Boolean) As AutoReportsWCFService.JobList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserAvailableJobs", ReplyAction:="http://tempuri.org/IService/GetUserAvailableJobsResponse")>  _
        Function GetUserAvailableJobsAsync(ByVal UserID As Integer, ByVal IncludeSubscribed As Boolean) As System.Threading.Tasks.Task(Of AutoReportsWCFService.JobList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserAvailSubscriptions", ReplyAction:="http://tempuri.org/IService/GetUserAvailSubscriptionsResponse")>  _
        Function GetUserAvailSubscriptions(ByVal UserID As Integer, ByVal IncludeSubscribed As Boolean) As AutoReportsWCFService.JobList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserAvailSubscriptions", ReplyAction:="http://tempuri.org/IService/GetUserAvailSubscriptionsResponse")>  _
        Function GetUserAvailSubscriptionsAsync(ByVal UserID As Integer, ByVal IncludeSubscribed As Boolean) As System.Threading.Tasks.Task(Of AutoReportsWCFService.JobList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetJobDistributionList", ReplyAction:="http://tempuri.org/IService/GetJobDistributionListResponse")>  _
        Function GetJobDistributionList(ByVal JobID As Integer) As AutoReportsWCFService.UserList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetJobDistributionList", ReplyAction:="http://tempuri.org/IService/GetJobDistributionListResponse")>  _
        Function GetJobDistributionListAsync(ByVal JobID As Integer) As System.Threading.Tasks.Task(Of AutoReportsWCFService.UserList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetOverdueAlerts", ReplyAction:="http://tempuri.org/IService/GetOverdueAlertsResponse")>  _
        Function GetOverdueAlerts(ByVal MaxQty As Integer, ByVal SinceTime As String) As AutoReportsWCFService.AlertList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetOverdueAlerts", ReplyAction:="http://tempuri.org/IService/GetOverdueAlertsResponse")>  _
        Function GetOverdueAlertsAsync(ByVal MaxQty As Integer, ByVal SinceTime As String) As System.Threading.Tasks.Task(Of AutoReportsWCFService.AlertList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/IsUserAuthorizedToViewJob", ReplyAction:="http://tempuri.org/IService/IsUserAuthorizedToViewJobResponse")>  _
        Function IsUserAuthorizedToViewJob(ByVal UserID As Integer, ByVal JobID As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/IsUserAuthorizedToViewJob", ReplyAction:="http://tempuri.org/IService/IsUserAuthorizedToViewJobResponse")>  _
        Function IsUserAuthorizedToViewJobAsync(ByVal UserID As Integer, ByVal JobID As Integer) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/IsUserSubscribedToJob", ReplyAction:="http://tempuri.org/IService/IsUserSubscribedToJobResponse")>  _
        Function IsUserSubscribedToJob(ByVal UserID As Integer, ByVal JobID As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/IsUserSubscribedToJob", ReplyAction:="http://tempuri.org/IService/IsUserSubscribedToJobResponse")>  _
        Function IsUserSubscribedToJobAsync(ByVal UserID As Integer, ByVal JobID As Integer) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UserExists", ReplyAction:="http://tempuri.org/IService/UserExistsResponse")>  _
        Function UserExists(ByVal UserEmail As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UserExists", ReplyAction:="http://tempuri.org/IService/UserExistsResponse")>  _
        Function UserExistsAsync(ByVal UserEmail As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserID", ReplyAction:="http://tempuri.org/IService/GetUserIDResponse")>  _
        Function GetUserID(ByVal UserEmail As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetUserID", ReplyAction:="http://tempuri.org/IService/GetUserIDResponse")>  _
        Function GetUserIDAsync(ByVal UserEmail As String) As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/CheckPassword", ReplyAction:="http://tempuri.org/IService/CheckPasswordResponse")>  _
        Function CheckPassword(ByVal UserEmail As String, ByVal Password As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/CheckPassword", ReplyAction:="http://tempuri.org/IService/CheckPasswordResponse")>  _
        Function CheckPasswordAsync(ByVal UserEmail As String, ByVal Password As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddUser", ReplyAction:="http://tempuri.org/IService/AddUserResponse")>  _
        Function AddUser(ByVal UserMail As String, ByVal UserPassword As String, ByVal UserName As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/AddUser", ReplyAction:="http://tempuri.org/IService/AddUserResponse")>  _
        Function AddUserAsync(ByVal UserMail As String, ByVal UserPassword As String, ByVal UserName As String) As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DistributeAutoReports", ReplyAction:="http://tempuri.org/IService/DistributeAutoReportsResponse")>  _
        Function DistributeAutoReports(ByVal MaxCount As Integer, ByVal SinceDateTime As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/DistributeAutoReports", ReplyAction:="http://tempuri.org/IService/DistributeAutoReportsResponse")>  _
        Function DistributeAutoReportsAsync(ByVal MaxCount As Integer, ByVal SinceDateTime As String) As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/SendPasswordByEmail", ReplyAction:="http://tempuri.org/IService/SendPasswordByEmailResponse")>  _
        Function SendPasswordByEmail(ByVal UserEmail As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/SendPasswordByEmail", ReplyAction:="http://tempuri.org/IService/SendPasswordByEmailResponse")>  _
        Function SendPasswordByEmailAsync(ByVal UserEmail As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/SendMessages", ReplyAction:="http://tempuri.org/IService/SendMessagesResponse")>  _
        Function SendMessages(ByVal MaxQty As Integer, ByVal SinceDate As Date) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/SendMessages", ReplyAction:="http://tempuri.org/IService/SendMessagesResponse")>  _
        Function SendMessagesAsync(ByVal MaxQty As Integer, ByVal SinceDate As Date) As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/SendMessage", ReplyAction:="http://tempuri.org/IService/SendMessageResponse")>  _
        Function SendMessage(ByVal UserEmail As String, ByVal Subject As String, ByVal Message As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/SendMessage", ReplyAction:="http://tempuri.org/IService/SendMessageResponse")>  _
        Function SendMessageAsync(ByVal UserEmail As String, ByVal Subject As String, ByVal Message As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/MarkQAMessageAsSent", ReplyAction:="http://tempuri.org/IService/MarkQAMessageAsSentResponse")>  _
        Function MarkQAMessageAsSent(ByVal QAID As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/MarkQAMessageAsSent", ReplyAction:="http://tempuri.org/IService/MarkQAMessageAsSentResponse")>  _
        Function MarkQAMessageAsSentAsync(ByVal QAID As Integer) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/SubscribeUserToJob", ReplyAction:="http://tempuri.org/IService/SubscribeUserToJobResponse")>  _
        Function SubscribeUserToJob(ByVal UserID As Integer, ByVal JobID As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/SubscribeUserToJob", ReplyAction:="http://tempuri.org/IService/SubscribeUserToJobResponse")>  _
        Function SubscribeUserToJobAsync(ByVal UserID As Integer, ByVal JobID As Integer) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UnsubscribeUserFromJob", ReplyAction:="http://tempuri.org/IService/UnsubscribeUserFromJobResponse")>  _
        Function UnsubscribeUserFromJob(ByVal uSERid As Integer, ByVal JobID As Integer, ByVal LocalTime As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UnsubscribeUserFromJob", ReplyAction:="http://tempuri.org/IService/UnsubscribeUserFromJobResponse")>  _
        Function UnsubscribeUserFromJobAsync(ByVal uSERid As Integer, ByVal JobID As Integer, ByVal LocalTime As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/SetUserStatus", ReplyAction:="http://tempuri.org/IService/SetUserStatusResponse")>  _
        Function SetUserStatus(ByVal UserID As Integer, ByVal IsActive As Boolean) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/SetUserStatus", ReplyAction:="http://tempuri.org/IService/SetUserStatusResponse")>  _
        Function SetUserStatusAsync(ByVal UserID As Integer, ByVal IsActive As Boolean) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/SetJobStatus", ReplyAction:="http://tempuri.org/IService/SetJobStatusResponse")>  _
        Function SetJobStatus(ByVal JobID As Integer, ByVal IsActive As Boolean) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/SetJobStatus", ReplyAction:="http://tempuri.org/IService/SetJobStatusResponse")>  _
        Function SetJobStatusAsync(ByVal JobID As Integer, ByVal IsActive As Boolean) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/LogActivity", ReplyAction:="http://tempuri.org/IService/LogActivityResponse")>  _
        Function LogActivity(ByVal RecType As String, ByVal ArchiveID As Integer, ByVal UserID As Integer, ByVal JobID As Integer, ByVal Notes As String, ByVal LocalTime As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/LogActivity", ReplyAction:="http://tempuri.org/IService/LogActivityResponse")>  _
        Function LogActivityAsync(ByVal RecType As String, ByVal ArchiveID As Integer, ByVal UserID As Integer, ByVal JobID As Integer, ByVal Notes As String, ByVal LocalTime As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/LogArchive", ReplyAction:="http://tempuri.org/IService/LogArchiveResponse")>  _
        Function LogArchive(ByVal Action As String, ByVal Container As String, ByVal FileName As String, ByVal OutputFormat As String, ByVal JobRef As Integer, ByVal Run As String, ByVal Scheduled As String, ByVal DistributionList As String, ByVal Subject As String, ByVal Memo As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/LogArchive", ReplyAction:="http://tempuri.org/IService/LogArchiveResponse")>  _
        Function LogArchiveAsync(ByVal Action As String, ByVal Container As String, ByVal FileName As String, ByVal OutputFormat As String, ByVal JobRef As Integer, ByVal Run As String, ByVal Scheduled As String, ByVal DistributionList As String, ByVal Subject As String, ByVal Memo As String) As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetNextSchedule", ReplyAction:="http://tempuri.org/IService/GetNextScheduleResponse")>  _
        Function GetNextSchedule(ByVal JobID As Integer, ByVal LocalTime As String) As Date
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetNextSchedule", ReplyAction:="http://tempuri.org/IService/GetNextScheduleResponse")>  _
        Function GetNextScheduleAsync(ByVal JobID As Integer, ByVal LocalTime As String) As System.Threading.Tasks.Task(Of Date)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateJobSchedule", ReplyAction:="http://tempuri.org/IService/UpdateJobScheduleResponse")>  _
        Function UpdateJobSchedule(ByVal JobID As Integer, ByVal LastRun As String, ByVal OutputFilename As String, ByVal OutputContainer As String, ByVal OutputFormat As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/UpdateJobSchedule", ReplyAction:="http://tempuri.org/IService/UpdateJobScheduleResponse")>  _
        Function UpdateJobScheduleAsync(ByVal JobID As Integer, ByVal LastRun As String, ByVal OutputFilename As String, ByVal OutputContainer As String, ByVal OutputFormat As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetASNDistributionList", ReplyAction:="http://tempuri.org/IService/GetASNDistributionListResponse")>  _
        Function GetASNDistributionList(ByVal ASN As Integer) As AutoReportsWCFService.UserList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/GetASNDistributionList", ReplyAction:="http://tempuri.org/IService/GetASNDistributionListResponse")>  _
        Function GetASNDistributionListAsync(ByVal ASN As Integer) As System.Threading.Tasks.Task(Of AutoReportsWCFService.UserList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/MarkASNAsSent", ReplyAction:="http://tempuri.org/IService/MarkASNAsSentResponse")>  _
        Function MarkASNAsSent(ByVal Shipper As String, ByVal Completed As String, ByVal ArchContainer As String, ByVal ArchFileName As String, ByVal DistList As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/MarkASNAsSent", ReplyAction:="http://tempuri.org/IService/MarkASNAsSentResponse")>  _
        Function MarkASNAsSentAsync(ByVal Shipper As String, ByVal Completed As String, ByVal ArchContainer As String, ByVal ArchFileName As String, ByVal DistList As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/MarkArchiveAsSent", ReplyAction:="http://tempuri.org/IService/MarkArchiveAsSentResponse")>  _
        Function MarkArchiveAsSent(ByVal ArchiveID As Integer, ByVal distlist As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService/MarkArchiveAsSent", ReplyAction:="http://tempuri.org/IService/MarkArchiveAsSentResponse")>  _
        Function MarkArchiveAsSentAsync(ByVal ArchiveID As Integer, ByVal distlist As String) As System.Threading.Tasks.Task(Of Boolean)
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IServiceChannel
        Inherits AutoReportsWCFService.IService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class ServiceClient
        Inherits System.ServiceModel.ClientBase(Of AutoReportsWCFService.IService)
        Implements AutoReportsWCFService.IService
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function WSAvailable() As Boolean Implements AutoReportsWCFService.IService.WSAvailable
            Return MyBase.Channel.WSAvailable
        End Function
        
        Public Function WSAvailableAsync() As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.WSAvailableAsync
            Return MyBase.Channel.WSAvailableAsync
        End Function
        
        Public Function DBAvailable() As Boolean Implements AutoReportsWCFService.IService.DBAvailable
            Return MyBase.Channel.DBAvailable
        End Function
        
        Public Function DBAvailableAsync() As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.DBAvailableAsync
            Return MyBase.Channel.DBAvailableAsync
        End Function
        
        Public Function GetData(ByVal value As Integer) As String Implements AutoReportsWCFService.IService.GetData
            Return MyBase.Channel.GetData(value)
        End Function
        
        Public Function GetDataAsync(ByVal value As Integer) As System.Threading.Tasks.Task(Of String) Implements AutoReportsWCFService.IService.GetDataAsync
            Return MyBase.Channel.GetDataAsync(value)
        End Function
        
        Public Function HelloWorld(ByVal LocalTime As String) As String Implements AutoReportsWCFService.IService.HelloWorld
            Return MyBase.Channel.HelloWorld(LocalTime)
        End Function
        
        Public Function HelloWorldAsync(ByVal LocalTime As String) As System.Threading.Tasks.Task(Of String) Implements AutoReportsWCFService.IService.HelloWorldAsync
            Return MyBase.Channel.HelloWorldAsync(LocalTime)
        End Function
        
        Public Function GetDataUsingDataContract(ByVal composite As AutoReportsWCFService.CompositeType) As AutoReportsWCFService.CompositeType Implements AutoReportsWCFService.IService.GetDataUsingDataContract
            Return MyBase.Channel.GetDataUsingDataContract(composite)
        End Function
        
        Public Function GetDataUsingDataContractAsync(ByVal composite As AutoReportsWCFService.CompositeType) As System.Threading.Tasks.Task(Of AutoReportsWCFService.CompositeType) Implements AutoReportsWCFService.IService.GetDataUsingDataContractAsync
            Return MyBase.Channel.GetDataUsingDataContractAsync(composite)
        End Function
        
        Public Function GetUsers(ByVal IncludeInactive As Boolean) As AutoReportsWCFService.UserList() Implements AutoReportsWCFService.IService.GetUsers
            Return MyBase.Channel.GetUsers(IncludeInactive)
        End Function
        
        Public Function GetUsersAsync(ByVal IncludeInactive As Boolean) As System.Threading.Tasks.Task(Of AutoReportsWCFService.UserList()) Implements AutoReportsWCFService.IService.GetUsersAsync
            Return MyBase.Channel.GetUsersAsync(IncludeInactive)
        End Function
        
        Public Function GetJobHistory(ByVal JobID As Integer, ByVal SinceDate As Date) As AutoReportsWCFService.ArchiveList() Implements AutoReportsWCFService.IService.GetJobHistory
            Return MyBase.Channel.GetJobHistory(JobID, SinceDate)
        End Function
        
        Public Function GetJobHistoryAsync(ByVal JobID As Integer, ByVal SinceDate As Date) As System.Threading.Tasks.Task(Of AutoReportsWCFService.ArchiveList()) Implements AutoReportsWCFService.IService.GetJobHistoryAsync
            Return MyBase.Channel.GetJobHistoryAsync(JobID, SinceDate)
        End Function
        
        Public Function GetArchiveInfo(ByVal ArchiveID As Integer) As AutoReportsWCFService.ArchiveList() Implements AutoReportsWCFService.IService.GetArchiveInfo
            Return MyBase.Channel.GetArchiveInfo(ArchiveID)
        End Function
        
        Public Function GetArchiveInfoAsync(ByVal ArchiveID As Integer) As System.Threading.Tasks.Task(Of AutoReportsWCFService.ArchiveList()) Implements AutoReportsWCFService.IService.GetArchiveInfoAsync
            Return MyBase.Channel.GetArchiveInfoAsync(ArchiveID)
        End Function
        
        Public Function GetUserActivityLog(ByVal UserID As Integer, ByVal SinceDate As Date, ByVal IncludeASNs As Boolean, ByVal IncludeAutoReports As Boolean, ByVal IncludeAcctChanges As Boolean) As AutoReportsWCFService.UserActivityList() Implements AutoReportsWCFService.IService.GetUserActivityLog
            Return MyBase.Channel.GetUserActivityLog(UserID, SinceDate, IncludeASNs, IncludeAutoReports, IncludeAcctChanges)
        End Function
        
        Public Function GetUserActivityLogAsync(ByVal UserID As Integer, ByVal SinceDate As Date, ByVal IncludeASNs As Boolean, ByVal IncludeAutoReports As Boolean, ByVal IncludeAcctChanges As Boolean) As System.Threading.Tasks.Task(Of AutoReportsWCFService.UserActivityList()) Implements AutoReportsWCFService.IService.GetUserActivityLogAsync
            Return MyBase.Channel.GetUserActivityLogAsync(UserID, SinceDate, IncludeASNs, IncludeAutoReports, IncludeAcctChanges)
        End Function
        
        Public Function GetAppsList() As AutoReportsWCFService.AppsList() Implements AutoReportsWCFService.IService.GetAppsList
            Return MyBase.Channel.GetAppsList
        End Function
        
        Public Function GetAppsListAsync() As System.Threading.Tasks.Task(Of AutoReportsWCFService.AppsList()) Implements AutoReportsWCFService.IService.GetAppsListAsync
            Return MyBase.Channel.GetAppsListAsync
        End Function
        
        Public Function GetOverdueJobsList(ByVal AppID As Integer, ByVal locaTime As String) As AutoReportsWCFService.JobList() Implements AutoReportsWCFService.IService.GetOverdueJobsList
            Return MyBase.Channel.GetOverdueJobsList(AppID, locaTime)
        End Function
        
        Public Function GetOverdueJobsListAsync(ByVal AppID As Integer, ByVal locaTime As String) As System.Threading.Tasks.Task(Of AutoReportsWCFService.JobList()) Implements AutoReportsWCFService.IService.GetOverdueJobsListAsync
            Return MyBase.Channel.GetOverdueJobsListAsync(AppID, locaTime)
        End Function
        
        Public Function GetOverdueMessages(ByVal MaxQty As Integer, ByVal SinceTime As String) As AutoReportsWCFService.MessageList() Implements AutoReportsWCFService.IService.GetOverdueMessages
            Return MyBase.Channel.GetOverdueMessages(MaxQty, SinceTime)
        End Function
        
        Public Function GetOverdueMessagesAsync(ByVal MaxQty As Integer, ByVal SinceTime As String) As System.Threading.Tasks.Task(Of AutoReportsWCFService.MessageList()) Implements AutoReportsWCFService.IService.GetOverdueMessagesAsync
            Return MyBase.Channel.GetOverdueMessagesAsync(MaxQty, SinceTime)
        End Function
        
        Public Function GetJobsToDistribute(ByVal MaxCount As Integer, ByVal SinceDate As String) As AutoReportsWCFService.ArchiveList() Implements AutoReportsWCFService.IService.GetJobsToDistribute
            Return MyBase.Channel.GetJobsToDistribute(MaxCount, SinceDate)
        End Function
        
        Public Function GetJobsToDistributeAsync(ByVal MaxCount As Integer, ByVal SinceDate As String) As System.Threading.Tasks.Task(Of AutoReportsWCFService.ArchiveList()) Implements AutoReportsWCFService.IService.GetJobsToDistributeAsync
            Return MyBase.Channel.GetJobsToDistributeAsync(MaxCount, SinceDate)
        End Function
        
        Public Function GetQADistributionList(ByVal qaID As Integer) As AutoReportsWCFService.UserList() Implements AutoReportsWCFService.IService.GetQADistributionList
            Return MyBase.Channel.GetQADistributionList(qaID)
        End Function
        
        Public Function GetQADistributionListAsync(ByVal qaID As Integer) As System.Threading.Tasks.Task(Of AutoReportsWCFService.UserList()) Implements AutoReportsWCFService.IService.GetQADistributionListAsync
            Return MyBase.Channel.GetQADistributionListAsync(qaID)
        End Function
        
        Public Function GetJobsList(ByVal OverdueOnly As Boolean, ByVal IncludeASNs As Boolean, ByVal IncludeAutoReports As Boolean, ByVal IncludeInactive As Boolean, ByVal SinceDate As Date) As AutoReportsWCFService.JobList() Implements AutoReportsWCFService.IService.GetJobsList
            Return MyBase.Channel.GetJobsList(OverdueOnly, IncludeASNs, IncludeAutoReports, IncludeInactive, SinceDate)
        End Function
        
        Public Function GetJobsListAsync(ByVal OverdueOnly As Boolean, ByVal IncludeASNs As Boolean, ByVal IncludeAutoReports As Boolean, ByVal IncludeInactive As Boolean, ByVal SinceDate As Date) As System.Threading.Tasks.Task(Of AutoReportsWCFService.JobList()) Implements AutoReportsWCFService.IService.GetJobsListAsync
            Return MyBase.Channel.GetJobsListAsync(OverdueOnly, IncludeASNs, IncludeAutoReports, IncludeInactive, SinceDate)
        End Function
        
        Public Function GetUserJobSubscriptions(ByVal UserID As Integer) As AutoReportsWCFService.JobList() Implements AutoReportsWCFService.IService.GetUserJobSubscriptions
            Return MyBase.Channel.GetUserJobSubscriptions(UserID)
        End Function
        
        Public Function GetUserJobSubscriptionsAsync(ByVal UserID As Integer) As System.Threading.Tasks.Task(Of AutoReportsWCFService.JobList()) Implements AutoReportsWCFService.IService.GetUserJobSubscriptionsAsync
            Return MyBase.Channel.GetUserJobSubscriptionsAsync(UserID)
        End Function
        
        Public Function GetUserAvailableJobs(ByVal UserID As Integer, ByVal IncludeSubscribed As Boolean) As AutoReportsWCFService.JobList() Implements AutoReportsWCFService.IService.GetUserAvailableJobs
            Return MyBase.Channel.GetUserAvailableJobs(UserID, IncludeSubscribed)
        End Function
        
        Public Function GetUserAvailableJobsAsync(ByVal UserID As Integer, ByVal IncludeSubscribed As Boolean) As System.Threading.Tasks.Task(Of AutoReportsWCFService.JobList()) Implements AutoReportsWCFService.IService.GetUserAvailableJobsAsync
            Return MyBase.Channel.GetUserAvailableJobsAsync(UserID, IncludeSubscribed)
        End Function
        
        Public Function GetUserAvailSubscriptions(ByVal UserID As Integer, ByVal IncludeSubscribed As Boolean) As AutoReportsWCFService.JobList() Implements AutoReportsWCFService.IService.GetUserAvailSubscriptions
            Return MyBase.Channel.GetUserAvailSubscriptions(UserID, IncludeSubscribed)
        End Function
        
        Public Function GetUserAvailSubscriptionsAsync(ByVal UserID As Integer, ByVal IncludeSubscribed As Boolean) As System.Threading.Tasks.Task(Of AutoReportsWCFService.JobList()) Implements AutoReportsWCFService.IService.GetUserAvailSubscriptionsAsync
            Return MyBase.Channel.GetUserAvailSubscriptionsAsync(UserID, IncludeSubscribed)
        End Function
        
        Public Function GetJobDistributionList(ByVal JobID As Integer) As AutoReportsWCFService.UserList() Implements AutoReportsWCFService.IService.GetJobDistributionList
            Return MyBase.Channel.GetJobDistributionList(JobID)
        End Function
        
        Public Function GetJobDistributionListAsync(ByVal JobID As Integer) As System.Threading.Tasks.Task(Of AutoReportsWCFService.UserList()) Implements AutoReportsWCFService.IService.GetJobDistributionListAsync
            Return MyBase.Channel.GetJobDistributionListAsync(JobID)
        End Function
        
        Public Function GetOverdueAlerts(ByVal MaxQty As Integer, ByVal SinceTime As String) As AutoReportsWCFService.AlertList() Implements AutoReportsWCFService.IService.GetOverdueAlerts
            Return MyBase.Channel.GetOverdueAlerts(MaxQty, SinceTime)
        End Function
        
        Public Function GetOverdueAlertsAsync(ByVal MaxQty As Integer, ByVal SinceTime As String) As System.Threading.Tasks.Task(Of AutoReportsWCFService.AlertList()) Implements AutoReportsWCFService.IService.GetOverdueAlertsAsync
            Return MyBase.Channel.GetOverdueAlertsAsync(MaxQty, SinceTime)
        End Function
        
        Public Function IsUserAuthorizedToViewJob(ByVal UserID As Integer, ByVal JobID As Integer) As Boolean Implements AutoReportsWCFService.IService.IsUserAuthorizedToViewJob
            Return MyBase.Channel.IsUserAuthorizedToViewJob(UserID, JobID)
        End Function
        
        Public Function IsUserAuthorizedToViewJobAsync(ByVal UserID As Integer, ByVal JobID As Integer) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.IsUserAuthorizedToViewJobAsync
            Return MyBase.Channel.IsUserAuthorizedToViewJobAsync(UserID, JobID)
        End Function
        
        Public Function IsUserSubscribedToJob(ByVal UserID As Integer, ByVal JobID As Integer) As Boolean Implements AutoReportsWCFService.IService.IsUserSubscribedToJob
            Return MyBase.Channel.IsUserSubscribedToJob(UserID, JobID)
        End Function
        
        Public Function IsUserSubscribedToJobAsync(ByVal UserID As Integer, ByVal JobID As Integer) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.IsUserSubscribedToJobAsync
            Return MyBase.Channel.IsUserSubscribedToJobAsync(UserID, JobID)
        End Function
        
        Public Function UserExists(ByVal UserEmail As String) As Boolean Implements AutoReportsWCFService.IService.UserExists
            Return MyBase.Channel.UserExists(UserEmail)
        End Function
        
        Public Function UserExistsAsync(ByVal UserEmail As String) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.UserExistsAsync
            Return MyBase.Channel.UserExistsAsync(UserEmail)
        End Function
        
        Public Function GetUserID(ByVal UserEmail As String) As Integer Implements AutoReportsWCFService.IService.GetUserID
            Return MyBase.Channel.GetUserID(UserEmail)
        End Function
        
        Public Function GetUserIDAsync(ByVal UserEmail As String) As System.Threading.Tasks.Task(Of Integer) Implements AutoReportsWCFService.IService.GetUserIDAsync
            Return MyBase.Channel.GetUserIDAsync(UserEmail)
        End Function
        
        Public Function CheckPassword(ByVal UserEmail As String, ByVal Password As String) As Boolean Implements AutoReportsWCFService.IService.CheckPassword
            Return MyBase.Channel.CheckPassword(UserEmail, Password)
        End Function
        
        Public Function CheckPasswordAsync(ByVal UserEmail As String, ByVal Password As String) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.CheckPasswordAsync
            Return MyBase.Channel.CheckPasswordAsync(UserEmail, Password)
        End Function
        
        Public Function AddUser(ByVal UserMail As String, ByVal UserPassword As String, ByVal UserName As String) As Integer Implements AutoReportsWCFService.IService.AddUser
            Return MyBase.Channel.AddUser(UserMail, UserPassword, UserName)
        End Function
        
        Public Function AddUserAsync(ByVal UserMail As String, ByVal UserPassword As String, ByVal UserName As String) As System.Threading.Tasks.Task(Of Integer) Implements AutoReportsWCFService.IService.AddUserAsync
            Return MyBase.Channel.AddUserAsync(UserMail, UserPassword, UserName)
        End Function
        
        Public Function DistributeAutoReports(ByVal MaxCount As Integer, ByVal SinceDateTime As String) As Integer Implements AutoReportsWCFService.IService.DistributeAutoReports
            Return MyBase.Channel.DistributeAutoReports(MaxCount, SinceDateTime)
        End Function
        
        Public Function DistributeAutoReportsAsync(ByVal MaxCount As Integer, ByVal SinceDateTime As String) As System.Threading.Tasks.Task(Of Integer) Implements AutoReportsWCFService.IService.DistributeAutoReportsAsync
            Return MyBase.Channel.DistributeAutoReportsAsync(MaxCount, SinceDateTime)
        End Function
        
        Public Function SendPasswordByEmail(ByVal UserEmail As String) As Boolean Implements AutoReportsWCFService.IService.SendPasswordByEmail
            Return MyBase.Channel.SendPasswordByEmail(UserEmail)
        End Function
        
        Public Function SendPasswordByEmailAsync(ByVal UserEmail As String) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.SendPasswordByEmailAsync
            Return MyBase.Channel.SendPasswordByEmailAsync(UserEmail)
        End Function
        
        Public Function SendMessages(ByVal MaxQty As Integer, ByVal SinceDate As Date) As Integer Implements AutoReportsWCFService.IService.SendMessages
            Return MyBase.Channel.SendMessages(MaxQty, SinceDate)
        End Function
        
        Public Function SendMessagesAsync(ByVal MaxQty As Integer, ByVal SinceDate As Date) As System.Threading.Tasks.Task(Of Integer) Implements AutoReportsWCFService.IService.SendMessagesAsync
            Return MyBase.Channel.SendMessagesAsync(MaxQty, SinceDate)
        End Function
        
        Public Function SendMessage(ByVal UserEmail As String, ByVal Subject As String, ByVal Message As String) As Boolean Implements AutoReportsWCFService.IService.SendMessage
            Return MyBase.Channel.SendMessage(UserEmail, Subject, Message)
        End Function
        
        Public Function SendMessageAsync(ByVal UserEmail As String, ByVal Subject As String, ByVal Message As String) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.SendMessageAsync
            Return MyBase.Channel.SendMessageAsync(UserEmail, Subject, Message)
        End Function
        
        Public Function MarkQAMessageAsSent(ByVal QAID As Integer) As Boolean Implements AutoReportsWCFService.IService.MarkQAMessageAsSent
            Return MyBase.Channel.MarkQAMessageAsSent(QAID)
        End Function
        
        Public Function MarkQAMessageAsSentAsync(ByVal QAID As Integer) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.MarkQAMessageAsSentAsync
            Return MyBase.Channel.MarkQAMessageAsSentAsync(QAID)
        End Function
        
        Public Function SubscribeUserToJob(ByVal UserID As Integer, ByVal JobID As Integer) As Boolean Implements AutoReportsWCFService.IService.SubscribeUserToJob
            Return MyBase.Channel.SubscribeUserToJob(UserID, JobID)
        End Function
        
        Public Function SubscribeUserToJobAsync(ByVal UserID As Integer, ByVal JobID As Integer) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.SubscribeUserToJobAsync
            Return MyBase.Channel.SubscribeUserToJobAsync(UserID, JobID)
        End Function
        
        Public Function UnsubscribeUserFromJob(ByVal uSERid As Integer, ByVal JobID As Integer, ByVal LocalTime As String) As Boolean Implements AutoReportsWCFService.IService.UnsubscribeUserFromJob
            Return MyBase.Channel.UnsubscribeUserFromJob(uSERid, JobID, LocalTime)
        End Function
        
        Public Function UnsubscribeUserFromJobAsync(ByVal uSERid As Integer, ByVal JobID As Integer, ByVal LocalTime As String) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.UnsubscribeUserFromJobAsync
            Return MyBase.Channel.UnsubscribeUserFromJobAsync(uSERid, JobID, LocalTime)
        End Function
        
        Public Function SetUserStatus(ByVal UserID As Integer, ByVal IsActive As Boolean) As Boolean Implements AutoReportsWCFService.IService.SetUserStatus
            Return MyBase.Channel.SetUserStatus(UserID, IsActive)
        End Function
        
        Public Function SetUserStatusAsync(ByVal UserID As Integer, ByVal IsActive As Boolean) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.SetUserStatusAsync
            Return MyBase.Channel.SetUserStatusAsync(UserID, IsActive)
        End Function
        
        Public Function SetJobStatus(ByVal JobID As Integer, ByVal IsActive As Boolean) As Boolean Implements AutoReportsWCFService.IService.SetJobStatus
            Return MyBase.Channel.SetJobStatus(JobID, IsActive)
        End Function
        
        Public Function SetJobStatusAsync(ByVal JobID As Integer, ByVal IsActive As Boolean) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.SetJobStatusAsync
            Return MyBase.Channel.SetJobStatusAsync(JobID, IsActive)
        End Function
        
        Public Function LogActivity(ByVal RecType As String, ByVal ArchiveID As Integer, ByVal UserID As Integer, ByVal JobID As Integer, ByVal Notes As String, ByVal LocalTime As String) As Boolean Implements AutoReportsWCFService.IService.LogActivity
            Return MyBase.Channel.LogActivity(RecType, ArchiveID, UserID, JobID, Notes, LocalTime)
        End Function
        
        Public Function LogActivityAsync(ByVal RecType As String, ByVal ArchiveID As Integer, ByVal UserID As Integer, ByVal JobID As Integer, ByVal Notes As String, ByVal LocalTime As String) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.LogActivityAsync
            Return MyBase.Channel.LogActivityAsync(RecType, ArchiveID, UserID, JobID, Notes, LocalTime)
        End Function
        
        Public Function LogArchive(ByVal Action As String, ByVal Container As String, ByVal FileName As String, ByVal OutputFormat As String, ByVal JobRef As Integer, ByVal Run As String, ByVal Scheduled As String, ByVal DistributionList As String, ByVal Subject As String, ByVal Memo As String) As Integer Implements AutoReportsWCFService.IService.LogArchive
            Return MyBase.Channel.LogArchive(Action, Container, FileName, OutputFormat, JobRef, Run, Scheduled, DistributionList, Subject, Memo)
        End Function
        
        Public Function LogArchiveAsync(ByVal Action As String, ByVal Container As String, ByVal FileName As String, ByVal OutputFormat As String, ByVal JobRef As Integer, ByVal Run As String, ByVal Scheduled As String, ByVal DistributionList As String, ByVal Subject As String, ByVal Memo As String) As System.Threading.Tasks.Task(Of Integer) Implements AutoReportsWCFService.IService.LogArchiveAsync
            Return MyBase.Channel.LogArchiveAsync(Action, Container, FileName, OutputFormat, JobRef, Run, Scheduled, DistributionList, Subject, Memo)
        End Function
        
        Public Function GetNextSchedule(ByVal JobID As Integer, ByVal LocalTime As String) As Date Implements AutoReportsWCFService.IService.GetNextSchedule
            Return MyBase.Channel.GetNextSchedule(JobID, LocalTime)
        End Function
        
        Public Function GetNextScheduleAsync(ByVal JobID As Integer, ByVal LocalTime As String) As System.Threading.Tasks.Task(Of Date) Implements AutoReportsWCFService.IService.GetNextScheduleAsync
            Return MyBase.Channel.GetNextScheduleAsync(JobID, LocalTime)
        End Function
        
        Public Function UpdateJobSchedule(ByVal JobID As Integer, ByVal LastRun As String, ByVal OutputFilename As String, ByVal OutputContainer As String, ByVal OutputFormat As String) As Boolean Implements AutoReportsWCFService.IService.UpdateJobSchedule
            Return MyBase.Channel.UpdateJobSchedule(JobID, LastRun, OutputFilename, OutputContainer, OutputFormat)
        End Function
        
        Public Function UpdateJobScheduleAsync(ByVal JobID As Integer, ByVal LastRun As String, ByVal OutputFilename As String, ByVal OutputContainer As String, ByVal OutputFormat As String) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.UpdateJobScheduleAsync
            Return MyBase.Channel.UpdateJobScheduleAsync(JobID, LastRun, OutputFilename, OutputContainer, OutputFormat)
        End Function
        
        Public Function GetASNDistributionList(ByVal ASN As Integer) As AutoReportsWCFService.UserList() Implements AutoReportsWCFService.IService.GetASNDistributionList
            Return MyBase.Channel.GetASNDistributionList(ASN)
        End Function
        
        Public Function GetASNDistributionListAsync(ByVal ASN As Integer) As System.Threading.Tasks.Task(Of AutoReportsWCFService.UserList()) Implements AutoReportsWCFService.IService.GetASNDistributionListAsync
            Return MyBase.Channel.GetASNDistributionListAsync(ASN)
        End Function
        
        Public Function MarkASNAsSent(ByVal Shipper As String, ByVal Completed As String, ByVal ArchContainer As String, ByVal ArchFileName As String, ByVal DistList As String) As Boolean Implements AutoReportsWCFService.IService.MarkASNAsSent
            Return MyBase.Channel.MarkASNAsSent(Shipper, Completed, ArchContainer, ArchFileName, DistList)
        End Function
        
        Public Function MarkASNAsSentAsync(ByVal Shipper As String, ByVal Completed As String, ByVal ArchContainer As String, ByVal ArchFileName As String, ByVal DistList As String) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.MarkASNAsSentAsync
            Return MyBase.Channel.MarkASNAsSentAsync(Shipper, Completed, ArchContainer, ArchFileName, DistList)
        End Function
        
        Public Function MarkArchiveAsSent(ByVal ArchiveID As Integer, ByVal distlist As String) As Boolean Implements AutoReportsWCFService.IService.MarkArchiveAsSent
            Return MyBase.Channel.MarkArchiveAsSent(ArchiveID, distlist)
        End Function
        
        Public Function MarkArchiveAsSentAsync(ByVal ArchiveID As Integer, ByVal distlist As String) As System.Threading.Tasks.Task(Of Boolean) Implements AutoReportsWCFService.IService.MarkArchiveAsSentAsync
            Return MyBase.Channel.MarkArchiveAsSentAsync(ArchiveID, distlist)
        End Function
    End Class
End Namespace
